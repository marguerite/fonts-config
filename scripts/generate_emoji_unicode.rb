#!/usr/bin/env ruby

# Generate emoji unicodes from recommended emojis

require 'nokogiri'
require 'open-uri'

emojis_full = []
charsets = []

html = Nokogiri::HTML(open('https://gist.github.com/janlelis/72f9be1f0ecca07372c64cf13894b801'))

html.css('h3').each do |node|
  emojis = node.next_element.css('.g-emoji').map do |emoji|
    emoji.text.chars.map do |c|
      c.ord.to_s(16)
    end.join(' ')
  end

  emojis_full += emojis
  next unless ARGV[0] == '--debug'
  f = open(File.join(Dir.pwd, 'debug.txt'), 'a+:UTF-8')
  f.write node.text + "\n"
  emojis.each { |e| f.write e + "\n" }
  f.close
end

# emojis_full.each do |emoji|
#  if emoji.index(" ")
#    a = emoji.split(" ").map do |i|
#        [i.hex].pack("U")
#    end
#    puts a.join('')
#  else
#    puts [emoji.hex].pack("U")
#  end
# end

emojis_full.each do |i|
  if i.index(' ')
    # emoji font are char based, we have to break the sequences
    i.split(' ').each { |j| charsets << j }
  else
    charsets << i
  end
end

def get_range(chars)
  chars = chars.uniq.sort { |x, y| ('0x' + x).hex <=> ('0x' + y).hex }
  charset = []
  start = ''
  idx = 0
  chars.each_with_index do |i, j|
    if j.zero?
      start = i
      if ('0x' + chars[1]).hex - ('0x' + i).hex > 1
        charset << i
        start = chars[1]
        idx = 1
      end
      next
    end

    next if i == start

    sub = ('0x' + i).hex - ('0x' + chars[j - 1]).hex

    if sub < 2
      charset << start + '..' + i if j == chars.size - 1
    else
      if j - 1 == idx
        charset << start
      else
        charset << start + '..' + chars[j - 1]
        charset << i if j == chars.size - 1
      end
      start = i
      idx = j
    end
  end
  charset
end

charset = get_range(charsets)

if ARGV[0] == '--debug'
  f = open(File.join(Dir.pwd, 'debug.txt'), 'a+:UTF-8')
  f.write charset
  f.close
end

def print_charset(charset, prefix)
  puts "#{prefix}<charset>"
  charset.each do |c|
    if c.index('..')
      puts "#{prefix}  <range>"
      c.split('..').each do |i|
        puts "#{prefix}    <int>0x#{i}</int>"
      end
      puts "#{prefix}  </range>"
    else
      puts "#{prefix}  <int>0x#{c}</int>"
    end
  end
  puts "#{prefix}</charset>"
end

puts '<?xml version="1.0" ?>'
puts '<!DOCTYPE fontconfig SYSTEM "fonts.dtd">'
puts '<fontconfig>'

puts '<!-- Do not edit. Generated by scripts/generate_emoji_unicode.rb -->'

def print_charsetblock(fontname, charset)
  puts '  <match target="scan">'
  puts '    <test name="family">'
  puts "      <string>#{fontname}</string>"
  puts '    </test>'
  puts '    <edit name="charset">'
  print_charset(charset, ' ' * 6)
  puts '    </edit>'
  puts '  </match>'
end

def print_minusblock(fontname, charset)
  puts '  <match target="scan">'
  puts '    <test name="family">'
  puts "      <string>#{fontname}</string>"
  puts '    </test>'
  puts '    <edit name="charset" mode="assign">'
  puts '      <minus>'
  puts '        <name>charset</name>'
  print_charset(charset, ' ' * 8)
  puts '      </minus>'
  puts '    </edit>'
  puts '  </match>'
end
print_charsetblock('Noto Color Emoji', charset)
puts "  <!-- strip emojis from DejaVu Sans"
puts "       https://bugs.freedesktop.org/show_bug.cgi?id=31969"
puts "   -->"
print_minusblock('DejaVu Sans', charset)
print_minusblock('DejaVu Sans Mono', charset)
puts '</fontconfig>'
